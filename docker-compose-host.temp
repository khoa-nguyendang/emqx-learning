# version: "3.8"
# References: https://www.emqx.io/docs/en/latest/deploy/install-docker.html
services:
  # MQTT listeners
  mqtt-listener-1:
    image: emqx-learning/mqtt-listner:latest
    # logging:
    #   driver: none
    build:
      context: .
      dockerfile: EmqxLearning.MqttListener/Dockerfile
    environment:
      Logging__LogLevel__Default: Warning
      MqttClientOptions__TcpServer: localhost
      MqttClientOptions__CleanSession: true
      MqttClientOptions__ReconnectDelaySecs: 5
      MqttClientOptions__Topic: $$share/ahi/projectId/+/devices/+/telemetry
      MqttClientOptions__Qos: 1
      ReceiveDelay: 3
      ProcessingTime: 50
      NumberOfConnections: 20
      BackgroundProcessing: true
      RabbitMqClient__HostName: localhost
    network_mode: host
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: "50M"
    depends_on:
      rabbitmq1:
        condition: service_healthy

  # MQTT publishers
  mqtt-publisher-1:
    image: emqx-learning/mqtt-publisher:latest
    build:
      context: .
      dockerfile: EmqxLearning.MqttPublisher/Dockerfile
    environment:
      - MqttClientOptions__TcpServer=localhost
      - MqttClientOptions__TopicFormat=projectId/{0}/devices/{1}/telemetry
    stdin_open: true
    tty: true
    network_mode: host
    deploy:
      replicas: 3
    depends_on:
      rabbitmq1:
        condition: service_healthy

  # RabbitMQ consumers
  rabbitmq-consumer-1:
    image: emqx-learning/rabbitmq-consumer:latest
    # logging:
    #   driver: none
    build:
      context: .
      dockerfile: EmqxLearning.RabbitMqConsumer/Dockerfile
    environment:
      Logging__LogLevel__Default: Warning
      ProcessingTime: 0
      ConsumerCount: 3
      InsertDb: true
      ConnectionStrings__DeviceDb: Maximum Pool Size=35;User ID=postgres;Password=zaQ@123456!;Host=localhost;Port=5432;Database=device;Pooling=true;
      RabbitMqClient__HostName: localhost
      RabbitMqClient__DispatchConsumersAsync: true
      RabbitMqClient__ConsumerDispatchConcurrency: 750
      RabbitMqChannel__PrefetchCount: 1250
    network_mode: host
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "6"
          memory: "250M"
    depends_on:
      rabbitmq1:
        condition: service_healthy

  # rabbitmq-function-1:
  #   image: emqx-learning/rabbitmq-function:latest
  #   build:
  #     context: .
  #     dockerfile: EmqxLearning.RabbitMqFunction/Dockerfile
  #   environment:
  #     AzureWebJobsStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;"
  #     FUNCTIONS_WORKER_RUNTIME: "dotnet"
  #     AzureServiceBus__Host: "rabbitmq1"
  #     AzureServiceBus__KeyName: "admin"
  #     AzureServiceBus__SharedAccessKey: "zaQ@123456!"
  #     RabbitMQ: "amqp://admin:zaQ%40123456!@rabbitmq1:5672"
  #     DataFolder: "/var/device/data"
  #     AzureFunctionsJobHost__logging__LogLevel__Default: "Warning"
  #     ProcessingTime: 50
  #   networks:
  #     - emqx-bridge
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: "250M"
  #   depends_on:
  #     rabbitmq1:
  #       condition: service_healthy

  # EMQTT bench mark
  # emqtt-bench:
  #   image: emqx-learning/custom-emqtt-bench:latest
  #   logging:
  #     driver: none
  #   build:
  #     context: .
  #     dockerfile: deployment/emqtt-bench/Dockerfile
  #   networks:
  #     - emqx-bridge
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - HOST=node1.emqx.io

  # EMQX nodes
  emqx1:
    image: emqx/emqx:5.6.0
    container_name: emqx1
    environment:
      - "EMQX_NODE_NAME=emqx@localhost"
      - "EMQX_MQTT__MAX_MQUEUE_LEN=1000000"
      - "EMQX_MQTT__MAX_INFLIGHT=128"
      # - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      # - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    network_mode: host
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    # volumes:
    #   - $PWD/emqx1_data:/opt/emqx/data

  # emqx2:
  #   image: emqx/emqx:5.6.0
  #   container_name: emqx2
  #   environment:
  #     - "EMQX_NODE_NAME=emqx@node2.emqx.io"
  #     - "EMQX_MQTT__MAX_MQUEUE_LEN=1000000"
  #     - "EMQX_MQTT__MAX_INFLIGHT=128"
  #     - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
  #     - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
  #   healthcheck:
  #     test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
  #     interval: 5s
  #     timeout: 25s
  #     retries: 5
  #   networks:
  #     emqx-bridge:
  #       aliases:
  #         - node2.emqx.io
  #   # volumes:
  #   #   - $PWD/emqx2_data:/opt/emqx/data

  # RabbitMQ nodes
  rabbitmq1:
    image: rabbitmq:3.13.1-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./deployment/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./deployment/rabbitmq/rabbitmq-definitions.json:/etc/rabbitmq/definitions.json
    network_mode: host
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    deploy:
      resources:
        limits:
          memory: "1024M"

  # TimescaleDB
  timescaledb1:
    image: "timescale/timescaledb-ha:pg14-arm64"
    ports:
      - "5432:5432"
    # command: postgres -c 'autovacuum_analyze_scale_factor=0.02'
    #   -c 'autovacuum_naptime=10s'
    #   -c 'autovacuum_max_workers=10'
    #   -c 'autovacuum_vacuum_cost_limit=500'
    #   -c 'autovacuum_vacuum_scale_factor=0.05'
    #   -c 'log_autovacuum_min_duration=1min'
    #   -c 'hot_standby=true'
    #   -c 'max_connections=5000'
    #   -c 'max_prepared_transactions=0'
    #   -c 'max_locks_per_transaction=512'
    #   -c 'effective_io_concurrency=256'
    #   -c 'max_worker_processes=41'
    #   -c 'max_parallel_workers=8'
    #   -c 'shared_preload_libraries=timescaledb,pg_stat_statements'
    #   -c 'tcp_keepalives_idle=900'
    #   -c 'tcp_keepalives_interval=100'
    #   -c 'temp_file_limit=50GB'
    #   -c 'wal_level=hot_standby'
    #   -c 'shared_buffers=10240MB'
    #   -c 'min_wal_size=512MB'
    #   -c 'max_wal_size=1024MB'
    #   -c 'default_statistics_target=500'
    #   -c 'max_parallel_maintenance_workers=4'
    #   -c 'work_mem=10MB';
    volumes:
      - ./deployment/timescaledb/scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: "zaQ@123456!"
      POSTGRES_DB: "device"
    network_mode: host
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "4"
          memory: "2G"

  # Azure services
  azurite:
    image: "mcr.microsoft.com/azure-storage/azurite"
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    network_mode: host

# networks:
#   emqx-bridge:
#     driver: host
